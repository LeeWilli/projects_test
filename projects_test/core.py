# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_heart.ipynb.

# %% auto 0
__all__ = ['video_path', 'server_ip', 'hr_server_url', 'send_frame', 'detect_pulse']

# %% ../nbs/01_heart.ipynb 2
# the sample is from http://git.xinktech.com/yscz/alg/hr_detect_server/uploads/81dac5cbf6904113c61dee9305e9eada/sample.mp4
video_path = "/home/wangli/projects/hr_detect_server/sample.mp4"
server_ip = "localhost:8299"  # ip and port of the server.
hr_server_url = "http://{}/".format(server_ip)  # url of the server.

# %% ../nbs/01_heart.ipynb 4
def send_frame(frame, frame_id):
    image = cv2.imencode(".jpg", frame)[1]
    base64_data = str(base64.b64encode(image))[2:-1]
    datas = {"image": base64_data, "image_id": frame_id, "timestamp": int(time.time())}

    result = requests.post(
        hr_server_url + "process_framebyframe/", data=json.dumps(datas)
    )
    if result.status_code == 200:
        result = result.json()
        return result
    else:
        return None


# | export
def detect_pulse(device):
    records = {"bpm": [], "spo2": [], "respirat": []}

    if os.path.isdir(device):
        cap = cv2.VideoCapture(device + "//img_%04d.png")
    else:
        cap = cv2.VideoCapture(device)

    result = requests.post(
        hr_server_url + "start_hr_detect/?camera_fps=30&heart_interval=100&save=False"
    )
    print("start statue:", result)

    frame_num = 0
    while cap.isOpened():
        ret, frame = cap.read()

        if ret:  # 若是读取成功
            frame_num += 1
            res = send_frame(frame, "{}".format(frame_num))
            print(res)

        else:
            cap.release()
            break

    time.sleep(2)  # left 2s for the server to process the received frames.
    res = requests.get(hr_server_url + "get_bpm/")
    if res.json() != {}:
        records["bpm"] += list(res.json().values())
        print(res.json())
    res = requests.get(hr_server_url + "get_respirat/")
    if res.json() != {}:
        records["respirat"] += list(res.json().values())
        print("respirat:", res.json())
    res = requests.get(hr_server_url + "get_spo2/")
    if res.json() != {}:
        records["spo2"] += list(res.json().values())
        print("spo2 level:", res.json())

    return records
